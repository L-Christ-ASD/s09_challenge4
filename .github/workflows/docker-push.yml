
---

name: docker push

on:
  workflow_dispatch:
  push:
    tags: 
      - 'v*'

  schedule:
    # Planifier l'exécution tous les jours à minuit UTC
    - cron: '0 0 * * *'


env:
  REGISTRY: docker.io
  IMAGE_NAME: christasd/myapp-cowsay-go
    

jobs:
  push_dockerhub:
    runs-on: ubuntu-24.04
    strategy: 
      matrix: 
        arch: [amd64, arm64]
    steps:
      - name: checkout-file
        uses: actions/checkout@v4

      - name: Set up Go 
        uses: actions/setup-go@v3 
        with: 
          go-version: 1.21

      - name: Enable Go modules
        run: |
          echo "export GO111MODULE=on" >> $GITHUB_ENV
          go mod init main.go || true

      - name: Install dependencies
        run: go get -v github.com/Code-Hex/Neo-cowsay/v2

      - name: run cowsay main.go
        run: go run main.go

      - name: Build the executable
        run: |
          GOARCH=${{ matrix.arch }} go build -o myapp-cowsay-go-${{ matrix.arch }} main.go
          ls -al 
          file myapp-cowsay-go-${{ matrix.arch }}

      - name: where ami
        run: |
          pwd

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: |

            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest
      
      - name: Print Docker tags 
        run: echo "${{ steps.meta.outputs.tags }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.COWSAY_GO_USR }}
          password: ${{ secrets.COWSAY_GO_MD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create multi-architecture builder
        run: docker buildx create --use --name multi-arch-builder

      - name: Inspect Buildx
        run: docker buildx inspect --bootstrap

      - name: were ami
        run: |
          pwd
          ls -ahl


      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          dockerfile: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            "${{ steps.meta.outputs.tags }}"
          labels: |
            "${{ steps.meta.outputs.labels }}"
          build-args: | 
            ARCH=${{ matrix.arch }}
          
